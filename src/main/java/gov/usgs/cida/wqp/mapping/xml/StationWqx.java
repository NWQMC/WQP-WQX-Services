package gov.usgs.cida.wqp.mapping.xml;

import static gov.usgs.cida.wqp.mapping.StationColumn.*;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Component;

import gov.usgs.cida.wqp.mapping.ColumnProfile;

@Component
public class StationWqx extends BaseWqx implements IXmlMapping {
	
	public static final Map<String, String> HARD_BREAK = new LinkedHashMap<>();

	public static final Map<String, List<String>> COLUMN_POSITION = new LinkedHashMap<>();
	
	public static final Map<String, List<ColumnProfile>> GROUPING = new LinkedHashMap<>();

	static {
		HARD_BREAK.put(KEY_ORGANIZATION, ROOT_NODE);
		HARD_BREAK.put(KEY_SITE_ID, WQX_ORGANIZATION);
	}

	static {
		COLUMN_POSITION.put(KEY_ORGANIZATION,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_ORGANIZATION_DESCRIPTION,
						WQX_ORGANIZATION_IDENTIFIER)));
		COLUMN_POSITION.put(KEY_ORGANIZATION_NAME,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_ORGANIZATION_DESCRIPTION,
						WQX_ORGANIZATION_FORMAL_NAME)));
		
		COLUMN_POSITION.put(KEY_SITE_ID,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_IDENTITY,
						WQX_MONITORING_LOCATION_IDENTIFIER)));
		COLUMN_POSITION.put(KEY_STATION_NAME,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_IDENTITY,
						WQX_MONITORING_LOCATION_NAME)));
		COLUMN_POSITION.put(KEY_MONITORING_LOCATION_TYPE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_IDENTITY,
						WQX_MONITORING_LOCATION_TYPE)));
		
		
		COLUMN_POSITION.put(KEY_MONITORING_LOCATION_DESCRIPTION,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_IDENTITY,
						WQX_MONITORING_LOCATION_DESCRIPTION)));
		COLUMN_POSITION.put(KEY_HUC_8,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_IDENTITY,
						WQX_HUC_8)));
//		COLUMN_POSITION.put(KEY_HUC_12,
//				new LinkedList<String>(Arrays.asList(
//						WQX_ORGANIZATION,
//						WQX_MONITORING_LOCATION,
//						WQX_MONITORING_LOCATION_IDENTITY,
//						WQX_HUC_12)));
		COLUMN_POSITION.put(KEY_DRAIN_AREA_VALUE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_IDENTITY,
						WQX_DRAIN_AREA,
						WQX_MEASURE_VALUE)));
		COLUMN_POSITION.put(KEY_DRAIN_AREA_UNIT,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_IDENTITY,
						WQX_DRAIN_AREA,
						WQX_MEASURE_UNIT)));
		COLUMN_POSITION.put(KEY_CONTRIB_DRAIN_AREA_VALUE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_IDENTITY,
						WQX_CONTRIB_DRAIN_AREA,
						WQX_MEASURE_VALUE)));
		COLUMN_POSITION.put(KEY_CONTRIB_DRAIN_AREA_UNIT,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_IDENTITY,
						WQX_CONTRIB_DRAIN_AREA,
						WQX_MEASURE_UNIT)));
		
		
		
		COLUMN_POSITION.put(KEY_LATITUDE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_LATITUDE_MEASURE)));
		COLUMN_POSITION.put(KEY_LONGITUDE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_LONGITUDE_MEASURE)));

		
		
		COLUMN_POSITION.put(KEY_SOURCE_MAP_SCALE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_SOURCE_MAP_SCALE)));
		COLUMN_POSITION.put(KEY_HORIZONTAL_ACCY_VALUE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_HORIZONTAL_ACCY,
						WQX_MEASURE_VALUE)));
		COLUMN_POSITION.put(KEY_HORIZONTAL_ACCY_UNIT,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_HORIZONTAL_ACCY,
						WQX_MEASURE_UNIT)));
		COLUMN_POSITION.put(KEY_HORIZONTAL_COLLECTION_METHOD,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_HORIZONTAL_COLLECTION_METHOD)));
		COLUMN_POSITION.put(KEY_HORIZONTAL_DATUM,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_HORIZONTAL_DATUM)));
		COLUMN_POSITION.put(KEY_VERTICAL_MEASURE_VALUE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_VERTICAL_MEASURE,
						WQX_MEASURE_VALUE)));
		COLUMN_POSITION.put(KEY_VERTICAL_MEASURE_UNIT,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_VERTICAL_MEASURE,
						WQX_MEASURE_UNIT)));
		COLUMN_POSITION.put(KEY_VERTICAL_ACCY_VALUE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_VERTICAL_ACCY,
						WQX_MEASURE_VALUE)));
		COLUMN_POSITION.put(KEY_VERTICAL_ACCY_UNIT,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_VERTICAL_ACCY,
						WQX_MEASURE_UNIT)));
		COLUMN_POSITION.put(KEY_VERTICAL_COLLECTION_METHOD,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_VERTICAL_COLLECTION_METHOD)));
		COLUMN_POSITION.put(KEY_VERTICAL_DATUM,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_VERTICAL_DATUM)));
		COLUMN_POSITION.put(KEY_COUNTRY_CODE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_COUNTRY_CODE)));
		COLUMN_POSITION.put(KEY_STATE_CODE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_STATE_CODE)));
		COLUMN_POSITION.put(KEY_COUNTY_CODE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_MONITORING_LOCATION_GEOSPATIAL,
						WQX_COUNTY_CODE)));
		
		
		COLUMN_POSITION.put(KEY_NAT_AQFR_NAME,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_WELL_INFO,
						WQX_NAT_AQFR_NAME)));
		COLUMN_POSITION.put(KEY_AQFR_NAME,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_WELL_INFO,
						WQX_AQFR_NAME)));
		COLUMN_POSITION.put(KEY_AQFR_TYPE_NAME,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_WELL_INFO,
						WQX_AQFR_TYPE_NAME)));
		COLUMN_POSITION.put(KEY_CONSTRUCTION_DATE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_WELL_INFO,
						WQX_CONSTRUCTION_DATE)));
		COLUMN_POSITION.put(KEY_WELL_DEPTH_VALUE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_WELL_INFO,
						WQX_WELL_DEPTH,
						WQX_MEASURE_VALUE)));
		COLUMN_POSITION.put(KEY_WELL_DEPTH_UNIT,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_WELL_INFO,
						WQX_WELL_DEPTH,
						WQX_MEASURE_UNIT)));
		COLUMN_POSITION.put(KEY_HOLE_DEPTH_VALUE,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_WELL_INFO,
						WQX_HOLE_DEPTH,
						WQX_MEASURE_VALUE)));
		COLUMN_POSITION.put(KEY_HOLE_DEPTH_UNIT,
				new LinkedList<String>(Arrays.asList(
						WQX_ORGANIZATION,
						WQX_MONITORING_LOCATION,
						WQX_WELL_INFO,
						WQX_HOLE_DEPTH,
						WQX_MEASURE_UNIT)));
	}
	

	static {
		GROUPING.put(KEY_ORGANIZATION,
				new LinkedList<ColumnProfile>(Arrays.asList(ORGANIZATION, ORGANIZATION_NAME)));
		GROUPING.put(KEY_SITE_ID,
				new LinkedList<ColumnProfile>(Arrays.asList(SITE_ID,
						STATION_NAME,
						MONITORING_LOCATION_TYPE,
						MONITORING_LOCATION_DESCRIPTION,
						HUC_8,
						HUC_12,
						DRAIN_AREA_VALUE,
						DRAIN_AREA_UNIT,
						CONTRIB_DRAIN_AREA_VALUE,
						CONTRIB_DRAIN_AREA_UNIT,
						LATITUDE,
						LONGITUDE,
						SOURCE_MAP_SCALE,
						HORIZONTAL_ACCY_VALUE,
						HORIZONTAL_ACCY_UNIT,
						HORIZONTAL_COLLECTION_METHOD,
						HORIZONTAL_DATUM,
						VERTICAL_MEASURE_VALUE,
						VERTICAL_MEASURE_UNIT,
						VERTICAL_ACCY_VALUE,
						VERTICAL_ACCY_UNIT,
						VERTICAL_COLLECTION_METHOD,
						VERTICAL_DATUM,
						COUNTRY_CODE,
						STATE_CODE,
						COUNTY_CODE,
						NAT_AQFR_NAME,
						AQFR_NAME,
						AQFR_TYPE_NAME,
						CONSTRUCTION_DATE,
						WELL_DEPTH_VALUE,
						WELL_DEPTH_UNIT,
						HOLE_DEPTH_VALUE,
						HOLE_DEPTH_UNIT)));
	}
	
	public String getEntryNodeName() {
		return WQX_PROVIDER;
	}

	public Map<String, List<String>> getStructure() {
		return COLUMN_POSITION;
	}

	public Map<String, String> getHardBreak() {
		return HARD_BREAK;
	}

	public Map<String, List<ColumnProfile>> getGrouping() {
		return GROUPING;
	}

}
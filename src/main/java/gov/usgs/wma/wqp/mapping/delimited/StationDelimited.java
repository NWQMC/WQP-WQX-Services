package gov.usgs.wma.wqp.mapping.delimited;

import static gov.usgs.wma.wqp.mapping.BaseColumn.*;
import static gov.usgs.wma.wqp.mapping.StationColumn.*;
import static gov.usgs.wma.wqp.mapping.xml.BaseWqx.*;

import java.util.LinkedHashMap;
import java.util.Map;

import gov.usgs.wma.wqp.mapping.ColumnProfile;
import gov.usgs.wma.wqp.mapping.Profile;

public class StationDelimited extends BaseDelimited {

	//Column Headings for the Keys
	public static final String VALUE_MONITORING_LOCATION_NAME = WQX_MONITORING_LOCATION_NAME;
	public static final String VALUE_MONITORING_LOCATION = WQX_MONITORING_LOCATION;
	public static final String VALUE_MONITORING_LOCATION_IDENTITY = WQX_MONITORING_LOCATION_IDENTITY;
	public static final String VALUE_RESOLVED_MONITORING_LOCATION = WQX_RESOLVED_MONITORING_LOCATION;
	public static final String VALUE_MONITORING_LOCATION_GEOSPATIAL = WQX_MONITORING_LOCATION_GEOSPATIAL;
	public static final String VALUE_MONITORING_LOCATION_TYPE = WQX_MONITORING_LOCATION_TYPE;
	public static final String VALUE_MONITORING_LOCATION_DESCRIPTION = WQX_MONITORING_LOCATION_DESCRIPTION;
	public static final String VALUE_HUC_8 = WQX_HUC_8;
	public static final String VALUE_HUC_12 = WQX_HUC_12;
	public static final String VALUE_CONTRIB_DRAIN_AREA_VALUE = WQX_CONTRIB_DRAIN_AREA + VAL_DEL + WQX_MEASURE_VALUE;
	public static final String VALUE_CONTRIB_DRAIN_AREA_UNIT = WQX_CONTRIB_DRAIN_AREA + VAL_DEL + WQX_MEASURE_UNIT;
	public static final String VALUE_DRAIN_AREA_VALUE = WQX_DRAIN_AREA + VAL_DEL + WQX_MEASURE_VALUE;
	public static final String VALUE_DRAIN_AREA_UNIT = WQX_DRAIN_AREA + VAL_DEL + WQX_MEASURE_UNIT;
	public static final String VALUE_LATITUDE_MEASURE = WQX_LATITUDE_MEASURE;
	public static final String VALUE_LONGITUDE_MEASURE = WQX_LONGITUDE_MEASURE;
	public static final String VALUE_SOURCE_MAP_SCALE = WQX_SOURCE_MAP_SCALE;
	public static final String VALUE_HORIZONTAL_ACCY_VALUE = WQX_HORIZONTAL_ACCY + VAL_DEL + WQX_MEASURE_VALUE;
	public static final String VALUE_HORIZONTAL_ACCY_UNIT = WQX_HORIZONTAL_ACCY + VAL_DEL + WQX_MEASURE_UNIT;
	public static final String VALUE_HORIZONTAL_COLLECTION_METHOD = WQX_HORIZONTAL_COLLECTION_METHOD;
	public static final String VALUE_HORIZONTAL_DATUM = WQX_HORIZONTAL_DATUM;
	public static final String VALUE_VERTICAL_MEASURE_VALUE = WQX_VERTICAL_MEASURE + VAL_DEL + WQX_MEASURE_VALUE;
	public static final String VALUE_VERTICAL_MEASURE_UNIT = WQX_VERTICAL_MEASURE + VAL_DEL + WQX_MEASURE_UNIT;
	public static final String VALUE_VERTICAL_ACCY_VALUE = WQX_VERTICAL_ACCY + VAL_DEL + WQX_MEASURE_VALUE;
	public static final String VALUE_VERTICAL_ACCY_UNIT = WQX_VERTICAL_ACCY + VAL_DEL + WQX_MEASURE_UNIT;
	public static final String VALUE_VERTICAL_COLLECTION_METHOD = WQX_VERTICAL_COLLECTION_METHOD;
	public static final String VALUE_VERTICAL_DATUM = WQX_VERTICAL_DATUM;
	public static final String VALUE_COUNTRY_CODE = WQX_COUNTRY_CODE;
	public static final String VALUE_STATE_CODE = WQX_STATE_CODE;
	public static final String VALUE_COUNTY_CODE = WQX_COUNTY_CODE;
	public static final String VALUE_NAT_AQFR_NAME = WQX_NAT_AQFR_NAME;
	public static final String VALUE_AQFR_NAME = WQX_AQFR_NAME;
	public static final String VALUE_AQFR_TYPE_NAME = WQX_AQFR_TYPE_NAME;
	public static final String VALUE_CONSTRUCTION_DATE = WQX_CONSTRUCTION_DATE;
	public static final String VALUE_WELL_DEPTH_VALUE = WQX_WELL_DEPTH + VAL_DEL + WQX_MEASURE_VALUE;
	public static final String VALUE_WELL_DEPTH_UNIT = WQX_WELL_DEPTH + VAL_DEL + WQX_MEASURE_UNIT;
	public static final String VALUE_HOLE_DEPTH_VALUE = WQX_HOLE_DEPTH + VAL_DEL + WQX_MEASURE_VALUE;
	public static final String VALUE_HOLE_DEPTH_UNIT = WQX_HOLE_DEPTH + VAL_DEL + WQX_MEASURE_UNIT;

	public static final Map<ColumnProfile, String> MAPPINGS;
	static {
		MAPPINGS = new LinkedHashMap<ColumnProfile,String>();
		MAPPINGS.put(ORGANIZATION, VALUE_ORGANIZATION_IDENTIFIER);
		MAPPINGS.put(ORGANIZATION_NAME, VALUE_ORGANIZATION_FORMAL_NAME);
		MAPPINGS.put(SITE_ID, VALUE_MONITORING_LOCATION_IDENTIFIER);
		MAPPINGS.put(STATION_NAME, VALUE_MONITORING_LOCATION_NAME);
		MAPPINGS.put(MONITORING_LOCATION_TYPE, VALUE_MONITORING_LOCATION_TYPE);
		MAPPINGS.put(MONITORING_LOCATION_DESCRIPTION, VALUE_MONITORING_LOCATION_DESCRIPTION);
		MAPPINGS.put(SITE_TYPE, VALUE_RESOLVED_MONITORING_LOCATION);
		MAPPINGS.put(HUC_8, VALUE_HUC_8);
		MAPPINGS.put(HUC_12, VALUE_HUC_12);
		MAPPINGS.put(DRAIN_AREA_VALUE, VALUE_DRAIN_AREA_VALUE);
		MAPPINGS.put(DRAIN_AREA_UNIT, VALUE_DRAIN_AREA_UNIT);
		MAPPINGS.put(CONTRIB_DRAIN_AREA_VALUE, VALUE_CONTRIB_DRAIN_AREA_VALUE);
		MAPPINGS.put(CONTRIB_DRAIN_AREA_UNIT, VALUE_CONTRIB_DRAIN_AREA_UNIT);
		MAPPINGS.put(LATITUDE, VALUE_LATITUDE_MEASURE);
		MAPPINGS.put(LONGITUDE, VALUE_LONGITUDE_MEASURE);
		MAPPINGS.put(SOURCE_MAP_SCALE, VALUE_SOURCE_MAP_SCALE);
		MAPPINGS.put(HORIZONTAL_ACCY_VALUE, VALUE_HORIZONTAL_ACCY_VALUE);
		MAPPINGS.put(HORIZONTAL_ACCY_UNIT, VALUE_HORIZONTAL_ACCY_UNIT);
		MAPPINGS.put(HORIZONTAL_COLLECTION_METHOD, VALUE_HORIZONTAL_COLLECTION_METHOD);
		MAPPINGS.put(HORIZONTAL_DATUM, VALUE_HORIZONTAL_DATUM);
		MAPPINGS.put(VERTICAL_MEASURE_VALUE, VALUE_VERTICAL_MEASURE_VALUE);
		MAPPINGS.put(VERTICAL_MEASURE_UNIT, VALUE_VERTICAL_MEASURE_UNIT);
		MAPPINGS.put(VERTICAL_ACCY_VALUE, VALUE_VERTICAL_ACCY_VALUE);
		MAPPINGS.put(VERTICAL_ACCY_UNIT, VALUE_VERTICAL_ACCY_UNIT);
		MAPPINGS.put(VERTICAL_COLLECTION_METHOD, VALUE_VERTICAL_COLLECTION_METHOD);
		MAPPINGS.put(VERTICAL_DATUM, VALUE_VERTICAL_DATUM);
		MAPPINGS.put(COUNTRY_CODE, VALUE_COUNTRY_CODE);
		MAPPINGS.put(STATE_CODE, VALUE_STATE_CODE);
		MAPPINGS.put(COUNTY_CODE, VALUE_COUNTY_CODE);
		MAPPINGS.put(NAT_AQFR_NAME, VALUE_NAT_AQFR_NAME);
		MAPPINGS.put(AQFR_NAME, VALUE_AQFR_NAME);
		MAPPINGS.put(AQFR_TYPE_NAME, VALUE_AQFR_TYPE_NAME);
		MAPPINGS.put(CONSTRUCTION_DATE, VALUE_CONSTRUCTION_DATE);
		MAPPINGS.put(WELL_DEPTH_VALUE, VALUE_WELL_DEPTH_VALUE);
		MAPPINGS.put(WELL_DEPTH_UNIT, VALUE_WELL_DEPTH_UNIT);
		MAPPINGS.put(HOLE_DEPTH_VALUE, VALUE_HOLE_DEPTH_VALUE);
		MAPPINGS.put(HOLE_DEPTH_UNIT, VALUE_HOLE_DEPTH_UNIT);
		MAPPINGS.put(DATA_SOURCE, VALUE_DATA_SOURCE);
	}

	private StationDelimited() {
	}

	public static Map<String, String> getMapping(Profile profile) {
		return getMapping(MAPPINGS, profile);
	}

}

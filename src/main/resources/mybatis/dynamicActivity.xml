<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dynamicWhere">

    <sql id="baseWhereActivityClauses">
        <if test="project != null">
            and (<include refid="dynamicWhere.project" />)
        </if>
        <if test="sampleMedia != null">
            and (<include refid="dynamicWhere.sampleMedia" />)
        </if>
        <if test="startDateLo != null or startDateHi != null">
            and (<include refid="dynamicWhere.startDateLoHi" />)
        </if>
    </sql>
    
    <sql id="activityLimitWhere">
        <where>
            <if test="minactivities != null">
                and (filter.site_activity_count >= #{minactivities[0]})
            </if>
            <if test="minresults != null">
                and (filter.site_result_count >= #{minresults[0]})
            </if>
        </where>
    </sql>

    <sql id="activityJoinStationSum">
        <if test="bBox != null or within != null">
            join station_sum secondary
              on prime.station_id = secondary.station_id and
                 prime.data_source_id = secondary.data_source_id
        </if>
        <where>
            <include refid="dynamicWhere.baseWhereStationGeoClauses" />
            <include refid="dynamicWhere.baseWhereStationClauses" />
            <include refid="dynamicWhere.baseWhereActivityClauses" />
        </where>
    </sql>

    <sql id="dynamicWhere.activityJoinActivitySum">
        join (
              select prime.data_source_id,
                     prime.station_id,
                     prime.activity_id,
                     count(*) over (partition by prime.data_source_id, prime.station_id) site_activity_count,
                     sum(prime.result_count) over (partition by prime.data_source_id, prime.station_id) site_result_count
                from activity_sum prime
                <if test="bBox != null or within != null">
                    join station_sum secondary
                      on prime.station_id = secondary.station_id and
                         prime.data_source_id = secondary.data_source_id
                </if>
                <where>
                    <include refid="dynamicWhere.baseWhereStationGeoClauses" />
                    <include refid="dynamicWhere.baseWhereStationClauses" />
                    <include refid="dynamicWhere.baseWhereActivityClauses" />
                </where>
             ) filter
          on prime.data_source_id = filter.data_source_id and
             prime.station_id = filter.station_id and
             prime.activity_id = filter.activity_id
    </sql>

    <sql id="dynamicWhere.activityJoinResultSum">
        join (
              select distinct
                     prime.data_source_id,
                     prime.station_id,
                     prime.activity_id,
                     count(distinct prime.activity_id) over (partition by prime.data_source_id, prime.station_id) site_activity_count,
                     sum(prime.result_count) over (partition by prime.data_source_id, prime.station_id) site_result_count
                from result_sum prime
                <if test="bBox != null or within != null">
                    join station_sum secondary
                      on prime.station_id = secondary.station_id and
                         prime.data_source_id = secondary.data_source_id
                </if>
                <where>
                    <include refid="dynamicWhere.baseWhereStationGeoClauses" />
                    <include refid="dynamicWhere.baseWhereStationClauses" />
                    <include refid="dynamicWhere.baseWhereResultClauses" />
                </where>
             ) filter
          on prime.data_source_id = filter.data_source_id and
             prime.station_id = filter.station_id and
             prime.activity_id = filter.activity_id
    </sql>

    <sql id="activityBase">
        from activity prime
        <choose>
            <when test="analyticalmethod == null and assemblage == null and characteristicName == null and
                        characteristicType == null and pCode == null and subjectTaxonomicName == null and
                        minactivities == null and minresults == null">
                <include refid="dynamicWhere.activityJoinStationSum"/>
            </when>
            <when test="analyticalmethod == null and assemblage == null and characteristicName == null and
                        characteristicType == null and pCode == null and subjectTaxonomicName == null and
                        (minactivities != null or minresults != null)">
                <include refid="dynamicWhere.activityJoinActivitySum"/>
            </when>
            <otherwise>
                <include refid="dynamicWhere.activityJoinResultSum"/>
            </otherwise>
        </choose>
        <include refid="dynamicWhere.activityLimitWhere"/>
    </sql>

</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="resDetectQntLmt">

    <sql id="baseColumns">
        prime.detection_limit,
        prime.detection_limit_unit,
        prime.detection_limit_desc
    </sql>

    <select id="select" resultType="java.util.LinkedHashMap" fetchSize="500">
        select <include refid="base.baseColumns"/>,
               prime.activity,
               prime.characteristic_name,
               prime.data_source || '-' ||prime.result_id external_result_id, 
               prime.detection_limit_id,
               <include refid="resDetectQntLmt.baseColumns"/>
        <include refid="resDetectQntLmtBase"/>
        <if test="sorted == 'yes'">
            order by prime.data_source_id,
                     prime.organization,
                     prime.site_id,
                     prime.event_date,
                     prime.activity,
                     prime.result_id,
                     prime.detection_limit_desc
        </if>
    </select>

    <select id="count" resultType="java.util.LinkedHashMap">
        select data_source,
               count(distinct data_source || station_id) station_count,
               count(distinct data_source || activity_id) activity_count, 
               count(distinct data_source || result_id) result_count,
               count(*) res_detect_qnt_lmt_count
          from (select prime.data_source,
                       prime.station_id,
                       prime.activity_id,
                       prime.result_id
                  <include refid="resDetectQntLmtBase"/>)
             group by rollup(data_source)
    </select>

    <sql id="resDetectQntLmtBase">
        <choose>
            <when test="minactivities != null or minresults != null">
                from r_detect_qnt_lmt prime
                     join (select prime.data_source_id,
                                  prime.station_id,
                                  count(distinct prime.activity_id) site_activity_count,
                                  sum(prime.result_count) site_result_count
                             from result_sum prime
                             <if test="bBox != null or within != null">
                                 join station_sum secondary
                                   on prime.station_id = secondary.station_id and
                                      prime.data_source_id = secondary.data_source_id
                             </if>
                             <where>
                                 <include refid="dynamicWhere.baseWhereStationClauses" />
                                 <include refid="dynamicWhere.baseWhereResultClauses" />
                                 <if test="bBox != null or within != null">
                                     <include refid="dynamicWhere.baseWhereStationGeoClauses" />
                                 </if>
                             </where>
                                 group by prime.data_source_id, prime.station_id
                          ) secondary
                       on prime.station_id = secondary.station_id and
                          prime.data_source_id = secondary.data_source_id
                <where>
                    <include refid="dynamicWhere.baseWhereResultClauses" />
                    <if test="result != null">
                        and data_source = #{result[0]}
                        and result_id = #{result[1]}
                    </if>
                    <if test="minactivities != null">
                        and site_activity_count >= #{minactivities[0]}
                    </if>
                    <if test="minresults != null">
                        and site_result_count >= #{minresults[0]}
                    </if>
                </where>
            </when>

            <otherwise>
                from r_detect_qnt_lmt prime
                <if test="bBox != null or within != null">
                    join station_sum secondary
                      on prime.station_id = secondary.station_id and
                         prime.data_source_id = secondary.data_source_id
                </if>
                <where>
                    <include refid="dynamicWhere.baseWhereStationClauses" />
                    <include refid="dynamicWhere.baseWhereResultClauses" />
                    <if test="bBox != null or within != null">
                        <include refid="dynamicWhere.baseWhereStationGeoClauses" />
                    </if>
                    <if test="result != null">
                        and data_source = #{result[0]}
                        and result_id = #{result[1]}
                    </if>
                </where>
            </otherwise>
        </choose>
    </sql>
</mapper>

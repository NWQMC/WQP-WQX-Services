<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="periodOfRecord">
	<sql id="selectSummaryAllMonths">
        TO_CHAR(all_time_summary) period_of_record,
        nvl(activity_count,0) activity_count,
        nvl(result_count,0) result_count,
		to_char(all_time_last_result, 'YYYY-MM-DD') last_result
    </sql>
    
    <sql id="selectSummary12Months">
        TO_CHAR(current_year_summary) period_of_record,
        nvl(activity_count_past_12_months,0) activity_count,
        nvl(result_count_past_12_months,0) result_count,
		to_char(current_year_last_result, 'YYYY-MM-DD') last_result
    </sql>
    
    <sql id="selectSummary60Months">
        TO_CHAR(five_year_summary) period_of_record,
        nvl(activity_count_past_60_months,0) activity_count,
        nvl(result_count_past_60_months,0) result_count,
		to_char(five_year_last_result, 'YYYY-MM-DD') last_result
    </sql>
    
    <sql id="selectSummaryByYear">
        <choose>
            <when test="summaryYears == null or summaryYears.equalsIgnoreCase('all')"><include refid="selectSummaryAllMonths" /></when>
            <otherwise>
                <choose>
                    <when test="summaryYears.equalsIgnoreCase('1')"><include refid="selectSummary12Months" /></when>
                    <when test="summaryYears.equalsIgnoreCase('5')"><include refid="selectSummary60Months" /></when>
                    <otherwise><include refid="selectSummaryAllMonths" /></otherwise>
                </choose>
            </otherwise>
        </choose>
    </sql>
	
    <sql id="summaryYearWhere">
        <where>
            <include refid="dynamicWhere.baseWhereStationGeoClauses" />
            <include refid="dynamicWhere.baseWhereStationClauses" />
            <choose>
                <when test="summaryYears == null or summaryYears.equalsIgnoreCase('all')">
                    and all_time_summary is not null
                </when>
                <otherwise>
                    <choose>
                        <when test="summaryYears.equalsIgnoreCase('1')">and current_year_summary is not null</when>
                        <when test="summaryYears.equalsIgnoreCase('5')">and five_year_summary is not null</when>
                        <otherwise>and all_time_summary is not null</otherwise>
                    </choose>
                </otherwise>
            </choose>
        </where>
    </sql>

    <select id="select" resultType="java.util.LinkedHashMap" fetchSize="500">

        SELECT
        prime.organization,
		prime.station_id,
		prime.station_type_name,
		prime.organization_name,
		prime.site_id,
		prime.station_name,
		prime.station_type_name,
<!-- need the ResolvedMonitoringLocationTypeName -->
		prime.huc_8,
<!-- need the MonitoringLocationUrl -->		
		prime.state_name,
		prime.county_name,
		TO_CHAR(prime.geom.sdo_point.y,'FM90.0000000') latitude,
        TO_CHAR(prime.geom.sdo_point.x,'FM990.0000000') longitude,
		ml_g.data_source_id,
		ml_g.data_source,
		ml_g.station_id,
		ml_g.the_year,
		ml_g.characteristic_type,
		ml_g.characteristic_name,
		ml_g.total_activities,
		ml_g.total_results,
		ml_g.last_result_date
		
        FROM station_sum prime
		LEFT JOIN ml_grouping ml_g
		ON prime.data_source_id = ml_g.data_source_id 
				AND prime.station_id = ml_g.station_id        

        ORDER BY
        prime.data_source_id,
        prime.organization,
        prime.site_id
    </select>

    <select id="count" resultType="java.util.LinkedHashMap">
        select data_source,
               count(distinct data_source||'-'||station_id) station_count
              from station_sum prime              
        group by rollup(data_source)   
    </select>
	
</mapper>
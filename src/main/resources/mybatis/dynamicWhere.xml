<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dynamicWhere">

    <sql id="analyticalmethod">
        analytical_method in <foreach item="i" collection="analyticalmethod" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="assemblage">
        assemblage_sampled_name in <foreach item="i" collection="assemblage" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="bBox">
        sdo_inside(geom, sdo_geometry(2003, 4269, null, sdo_elem_info_array(1, 1003, 3), sdo_ordinate_array(#{bBox[0]}, #{bBox[1]}, #{bBox[2]}, #{bBox[3]}))) = 'TRUE'
    </sql>

    <sql id="characteristicName">
        characteristic_name in <foreach item="i" collection="characteristicName" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="characteristicType">
        characteristic_type in <foreach item="i" collection="characteristicType" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="commandavoid">
        prime.data_source_id in (select data_source_id
                                   from data_source
                                  where text in ('NWIS', 'STORET')
                                        <foreach item="i" collection="commandavoid">
                                            and text != #{i}
                                        </foreach>)
    </sql>

    <sql id="countrycode">
        prime.country_code in 
        <foreach item="i" collection="countrycode" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="countycode">
        prime.county_code in <foreach item="i" collection="countycode" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="huc">
        <foreach item="i" collection="huc" separator=" or ">
            <if test="i.length() == 2">prime.huc_2 = #{i}</if>
            <if test="i.length() == 4">prime.huc_4 = #{i}</if>
            <if test="i.length() == 6">prime.huc_6 = #{i}</if>
            <if test="i.length() == 8">prime.huc_8 = #{i}</if>
            <if test="i.length() == 10">prime.huc_10 = #{i}</if>
            <if test="i.length() == 12">prime.huc_12 = #{i}</if>
        </foreach>
    </sql>

    <sql id="organization">
        prime.organization in <foreach item="i" collection="organization" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="pCode">
        p_code in <foreach item="i" collection="pCode" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="project">
        (prime.data_source_id,project_id) in
            (select data_source_id,project_dim_value
               from project_dim
              where code_value in <foreach item="i" collection="project" open="(" separator="," close=")">#{i}</foreach>)
    </sql>

    <sql id="providers">
        prime.data_source_id in (select data_source_id
                                   from data_source
                                  where text in <foreach item="i" collection="providers" open="(" separator="," close=")">#{i}</foreach>)
    </sql>

    <sql id="sampleMedia">
        sample_media in <foreach item="i" collection="sampleMedia" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="siteId">
        prime.site_id in (select /*+ dynamic_sampling(DYN 10) */ distinct column_value
                            from table(wqp_core.pkg_dynamic_list.get_table(#{siteid, typeHandler=WqpArrayTypeHandler}))
                         )
    </sql>

    <sql id="nldiSiteId">
        prime.site_id in (select /*+ dynamic_sampling(DYN 10) */ distinct column_value
                            from table(wqp_core.pkg_dynamic_list.get_table(#{nldiurl, typeHandler=WqpArrayTypeHandler}))
                         )
    </sql>

    <sql id="siteType">
        prime.site_type in <foreach item="i" collection="siteType" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="startDateLoHi">
        event_date
        <choose>
            <when test="startDateLo != null and startDateHi != null">
                &gt;= to_date(#{startDateLo[0]}, 'MM-DD-YYYY') and event_date &lt; to_date(#{startDateHi[0]},'MM-DD-YYYY')+1
            </when>
            <when test="startDateLo != null">
                &gt;= to_date(#{startDateLo[0]}, 'MM-DD-YYYY')
            </when>
            <otherwise>
                &lt; to_date(#{startDateHi[0]}, 'MM-DD-YYYY')+1
            </otherwise>
        </choose>
    </sql>

    <sql id="statecode">
        prime.state_code in <foreach item="i" collection="statecode" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="subjectTaxonomicName">
        sample_tissue_taxonomic_name in <foreach item="i" collection="subjectTaxonomicName" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="within">
        sdo_within_distance(geom, sdo_geometry(2001, 4269, sdo_point_type(#{long[0]}, #{lat[0]}, null), null, null), 'DISTANCE='||#{within[0]}||' UNIT=MILE') = 'TRUE'
    </sql>

    <!-- **********************************************************************************************************************
         *** Station
         ********************************************************************************************************************** -->

    <sql id="baseWhereStationClauses">
        <if test="countrycode != null">
            and (<include refid="dynamicWhere.countrycode" />)
        </if>
        <if test="countycode != null">
            and (<include refid="dynamicWhere.countycode" />)
        </if>
        <if test="commandavoid != null">
            and (<include refid="dynamicWhere.commandavoid" />)
        </if>
        <if test="huc != null">
            and (<include refid="dynamicWhere.huc" />)
        </if>
        <if test="organization != null">
            and (<include refid="dynamicWhere.organization" />)
        </if>
        <if test="providers != null">
            and (<include refid="dynamicWhere.providers" />)
        </if>
        <if test="siteid != null">
            and (<include refid="dynamicWhere.siteId" />)
        </if>
        <if test="nldiurl != null">
            and (<include refid="dynamicWhere.nldiSiteId" />)
        </if>
         <if test="siteType != null">
            and (<include refid="dynamicWhere.siteType" />)
        </if>
        <if test="statecode != null">
            and (<include refid="dynamicWhere.statecode" />)
        </if>
    </sql>

    <sql id="baseWhereStationGeoClauses">
        <if test="bBox != null and bBox.length == 4">
            and (<include refid="dynamicWhere.bBox" />)
        </if>
        <if test="within != null and lat != null and long != null">
            and (<include refid="dynamicWhere.within" />)
        </if>
    </sql>

    <sql id="stationsBase">
         from station prime
        <choose>
            <when test="assemblage != null or sampleMedia != null or characteristicName != null or characteristicType != null or startDateLo != null or startDateHi != null or
                            analyticalmethod != null or pCode != null or project != null or subjectTaxonomicName != null">
                left join (select data_source_id, station_id, sum(result_count) result_count
                            <choose>
                                <when test="startDateLo != null or startDateHi != null">
                                     from result_sum prime
                                </when>
                                <otherwise>
                                     from result_ct_sum prime
                                </otherwise>
                            </choose>
                            <where>
                                <include refid="dynamicWhere.baseWhereResultClauses" />
                            </where>
                               group by data_source_id, station_id
                ) filter
            </when>
            <otherwise>
                left join (select data_source_id, station_id, result_count
                        from station_sum
                     ) filter
            </otherwise>
        </choose>
                  on prime.station_id = filter.station_id and
                     prime.data_source_id = filter.data_source_id
        <where>
            <include refid="dynamicWhere.baseWhereStationGeoClauses" />
            <include refid="dynamicWhere.baseWhereStationClauses" />
            <if test="assemblage != null or sampleMedia != null or characteristicName != null or characteristicType != null or startDateLo != null or startDateHi != null or
                      analyticalmethod != null or pCode != null or project != null or subjectTaxonomicName != null">
                and filter.result_count is not null
            </if>
            <if test="minresults != null">
                and (filter.result_count >= #{minresults[0]})
            </if>
        </where>
    </sql>


    <sql id="countBase">
        <choose>
            <when test="analyticalmethod == null and assemblage == null and characteristicName == null and
                        characteristicType == null and pCode == null and project == null and sampleMedia == null and
                        startDateHi == null and startDateLo == null and subjectTaxonomicName == null">
                select data_source,
                       count(distinct data_source||'-'||station_id) station_count,
                       sum(activity_count) activity_count,
                       sum(result_count) result_count
                  from (select prime.data_source,
                               prime.station_id,
                               prime.activity_count,
                               prime.result_count
                          from station_sum prime
                <where>
                    <include refid="dynamicWhere.baseWhereStationGeoClauses" />
                    <include refid="dynamicWhere.baseWhereStationClauses" />
                    <if test="minresults != null">
                        and (prime.result_count >= #{minresults[0]})
                    </if>
                </where>
                       )
                    group by rollup(data_source)
            </when>

            <when test="analyticalmethod == null and assemblage == null and characteristicName == null and
                        characteristicType == null and pCode == null and subjectTaxonomicName == null">
                select data_source,
                       count(distinct data_source||'-'||station_id) station_count,
                       count(distinct data_source||'-'||station_id||'-'||activity_id) activity_count,
                       sum(result_count) result_count
                  from (select prime.data_source,
                               prime.station_id,
                               prime.activity_id,
                               prime.result_count,
                               sum(prime.result_count) over (partition by prime.data_source_id, prime.station_id) site_result_count
                          from activity_sum prime
                <if test="within != null or bBox != null">
                    <include refid="dynamicWhere.geoJoin"/>
                </if>
                <where>
                    <include refid="dynamicWhere.baseWhereStationClauses" />
                    <include refid="dynamicWhere.baseWhereActivityClauses" />
                </where>
                       )
                <if test="minresults != null">
                    where site_result_count >= #{minresults[0]}
                </if>
                    group by rollup(data_source)
            </when>

            <when test="(startDateLo != null or startDateHi != null) and (bBox == null and within == null)">
                select data_source,
                       count(distinct data_source||'-'||station_id) station_count,
                       count(distinct data_source||'-'||station_id||'-'||activity_id) activity_count,
                       sum(result_count) result_count
                  from (select prime.data_source,
                               prime.station_id,
                               prime.activity_id,
                               prime.result_count,
                               sum(prime.result_count) over (partition by prime.data_source_id, prime.station_id) site_result_count
                          from result_sum prime
                <where>
                    <include refid="dynamicWhere.baseWhereStationClauses" />
                    <include refid="dynamicWhere.baseWhereActivityClauses" />
                </where>
                       )
                <if test="minresults != null">
                    where site_result_count >= #{minresults[0]}
                </if>
                    group by rollup(data_source)
            </when>

            <when test="bBox == null and within == null and startDateLo == null and startDateHi == null">
                select data_source,
                       count(distinct data_source||'-'||station_id) station_count,
                       count(distinct data_source||'-'||station_id||'-'||activity_id) activity_count,
                       sum(result_count) result_count
                  from (select prime.data_source,
                               prime.station_id,
                               prime.activity_id,
                               prime.result_count,
                               sum(prime.result_count) over (partition by prime.data_source_id, prime.station_id) site_result_count
                          from result_ct_sum prime
                        <where>
                            <include refid="dynamicWhere.baseWhereStationClauses" />
                            <include refid="dynamicWhere.baseWhereResultClauses" />
                        </where>
                       )
                <if test="minresults != null">
                    where site_result_count >= #{minresults[0]}
                </if>
                    group by rollup(data_source)
            </when>

            <otherwise>
                select data_source,
                       count(distinct data_source||'-'||station_id) station_count,
                       count(distinct data_source||'-'||station_id||'-'||activity_id) activity_count,
                       sum(result_count) result_count
                  from (select prime.data_source,
                               prime.station_id,
                               secondary.activity_id,
                               secondary.result_count,
                               sum(secondary.result_count) over (partition by secondary.data_source_id, secondary.station_id) site_result_count
                          from result_nr_sum secondary
                               join (select /*+ index_combine(prime) */ data_source, data_source_id, station_id, site_id
                                       from station prime
                <where>
                    <include refid="dynamicWhere.baseWhereStationGeoClauses" />
                    <include refid="dynamicWhere.baseWhereStationClauses" />
                </where>
                                    ) prime
                                 on prime.station_id = secondary.station_id and
                                    prime.data_source_id = secondary.data_source_id
                <where>
                    <trim prefix=" (" suffix=")" prefixOverrides="AND">
                        <include refid="dynamicWhere.baseWhereResultClauses" />
                    </trim>
                </where>
                       )
                <if test="minresults != null">
                    where site_result_count >= #{minresults[0]}
                </if>
                    group by rollup(data_source)
            </otherwise>

        </choose>
    </sql>


    <sql id="geoJoin">
            join (select /*+ index_combine(prime) */ data_source_id, station_id
                    from station_sum prime
                        <where>
                            <include refid="dynamicWhere.baseWhereStationGeoClauses" />
                        </where>
                 ) station_sum
              on prime.station_id = station_sum.station_id and
                 prime.data_source_id = station_sum.data_source_id
    </sql>


    <!-- **********************************************************************************************************************
         *** Result
         ********************************************************************************************************************** -->

    <sql id="resultStationHashHint">
        <if test="(bBox != null and bBox.length == 4) or (within != null and lat != null and long != null)">
            /*+ use_hash(prime) use_hash(secondary) */
        </if>
    </sql>

    <sql id="baseWhereResultClauses">
        <include refid="dynamicWhere.baseWhereActivityClauses" />
        <if test="analyticalmethod != null">
            and (<include refid="dynamicWhere.analyticalmethod" />)
        </if>
        <if test="assemblage != null">
            and (<include refid="dynamicWhere.assemblage" />)
        </if>
        <if test="characteristicName != null">
            and (<include refid="dynamicWhere.characteristicName" />)
        </if>
        <if test="characteristicType != null">
            and (<include refid="dynamicWhere.characteristicType" />)
        </if>
        <if test="pCode != null">
            and (<include refid="dynamicWhere.pCode" />)
        </if>
        <if test="subjectTaxonomicName != null">
            and (<include refid="dynamicWhere.subjectTaxonomicName" />)
        </if>
    </sql>

    <sql id="resultsBase">
        from result prime
        <if test="(bBox != null and bBox.length == 4) or (within != null and lat != null and long != null)">
            join station secondary
              on prime.station_id = secondary.station_id and
                 prime.data_source_id = secondary.data_source_id
        </if>
        <where>
            <include refid="dynamicWhere.baseWhereStationClauses" />
            <include refid="dynamicWhere.baseWhereResultClauses" />
            <if test="(bBox != null and bBox.length == 4) or (within != null and lat != null and long != null)">
                <include refid="dynamicWhere.baseWhereStationGeoClauses" />
            </if>
        </where>
    </sql>

    <!-- **********************************************************************************************************************
         *** Activity
         ********************************************************************************************************************** -->

    <sql id="baseWhereActivityClauses">
        <if test="project != null">
            and (<include refid="dynamicWhere.project" />)
        </if>
        <if test="sampleMedia != null">
            and (<include refid="dynamicWhere.sampleMedia" />)
        </if>
        <if test="startDateLo != null or startDateHi != null">
            and (<include refid="dynamicWhere.startDateLoHi" />)
        </if>
    </sql>

    <sql id="activityBase">
        from activity prime
        <if test="(bBox != null and bBox.length == 4) or (within != null and lat != null and long != null)">
            join station secondary
              on prime.station_id = secondary.station_id and
                 prime.data_source_id = secondary.data_source_id
        </if>
<!--
        <choose>
            <when test="assemblage != null or characteristicName != null or characteristicType != null or
                            analyticalmethod != null or pCode != null or subjectTaxonomicName != null">
                left join (select data_source_id, activity, sum(result_count) over (partition by data_source_id, station_id) result_count
                            <choose>
                                <when test="startDateLo != null or startDateHi != null">
                                     from result_sum prime
                                </when>
                                <otherwise>
                                     from result_ct_sum prime
                                </otherwise>
                            </choose>
                            <where>
                                <include refid="dynamicWhere.baseWhereResultClauses" />
                            </where>
                               group by data_source_id, activity
                ) filter
            </when>
            <otherwise>
                left join (select data_source_id, activity_id, result_count
                        from activity_sum
                     ) filter
            </otherwise>
        </choose>
                  on prime.activity_id = filter.activity_id and
                     prime.data_source_id = filter.data_source_id
-->
        <where>
            <include refid="dynamicWhere.baseWhereStationClauses" />
            <include refid="dynamicWhere.baseWhereActivityClauses" />
            <if test="(bBox != null and bBox.length == 4) or (within != null and lat != null and long != null)">
                <include refid="dynamicWhere.baseWhereStationGeoClauses" />
            </if>
<!--
            <if test="minresults != null">
                and (filter.result_count >= #{minresults[0]})
            </if>
-->
        </where>
    </sql>

</mapper>

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="dataMapper">



    <sql id="dbSchema">wqp_core.</sql>

    <!-- **********************************************************************************************************************
          *** Station
          ********************************************************************************************************************** -->

    <sql id="stationsBase">
        from <include refid="dataMapper.dbSchema"/>station s
<!--         <include refid="dataMapper.dynaTab" /> -->
          <where>
          		<include refid="dataMapper.baseWhereStationGeoClauses" />
            <include refid="dataMapper.baseWhereStationClauses" />
              <if test="sampleMedia != null || characteristicName != null || characteristicType != null || startDateLo != null || startDateHi != null ||
                        activityId != null || analyticalmethod != null || pCode != null">
                and exists (select null from
                                   <include refid="dataMapper.dbSchema"/>pc_result
                               where s.site_id = pc_result.site_id and
                                     s.data_source_id = pc_result.data_source_id
                                     <include refid="dataMapper.baseWhereResultClauses" />
                             )
            </if>
<!--             <include refid="dataMapper.dynaWhere" /> -->
        </where>
    </sql>

    <sql id="stationsCountBase">
        from 
		<if test="sampleMedia == null &amp;&amp; characteristicName == null &amp;&amp; characteristicType == null &amp;&amp;
                  startDateLo == null &amp;&amp; startDateHi == null &amp;&amp;
                  activityId == null &amp;&amp; analyticalmethod == null &amp;&amp; pCode == null">
			<include refid="dataMapper.dbSchema"/>station_sum s
<!--         	<include refid="dataMapper.dynaTab" /> -->
          	<where>
          		<include refid="dataMapper.baseWhereStationGeoClauses" />
            	<include refid="dataMapper.baseWhereStationClauses" />
<!--              	<include refid="dataMapper.dynaWhere" /> -->
            </where>
        </if>
        <if test="startDateLo != NULL || startDateHi != NULL || activityId != null">
       		<if test="bBox == NULL &amp;&amp; within == NULL">
				<include refid="dataMapper.dbSchema"/>pc_result_sum s
<!--                 <include refid="dataMapper.dynaTab" /> -->
	            <where>
					<include refid="dataMapper.baseWhereStationClauses" />
					<include refid="dataMapper.baseWhereResultClauses" />
<!-- 					<include refid="dataMapper.dynaWhere" /> -->
				</where>
        	</if>
        </if>
        <if test="sampleMedia != NULL || characteristicName != NULL || characteristicType != NULL || 
                  analyticalmethod != null || pCode != null">
        	<if test="startDateLo == NULL &amp;&amp; startDateHi == NULL &amp;&amp; within == NULL &amp;&amp; bBox == NULL">
            	<include refid="dataMapper.dbSchema"/>pc_result_ct_sum s
<!--                 <include refid="dataMapper.dynaTab" /> -->
               	<where>
					<include refid="dataMapper.baseWhereStationClauses" />
					<include refid="dataMapper.baseWhereResultClauses" />
<!-- 					<include refid="dataMapper.dynaWhere" /> -->
				</where>
             </if>
     	</if>
        <if test="within != NULL || bBox != NULL">
        	<if test="sampleMedia != NULL || characteristicName != NULL || characteristicType != NULL ||
                      startDateLo != NULL || startDateHi != NULL ||
                      activityId != null || analyticalmethod != null || pCode != null">
            	<include refid="dataMapper.dbSchema"/>pc_result_sum a,
                (select /*+ index_combine(s) */ data_source_id, station_id, site_id
                   from <include refid="dataMapper.dbSchema"/>station_sum s
	            	<where>
	            		<include refid="dataMapper.baseWhereStationGeoClauses" />
               		</where>
               	) s
<!--                 <include refid="dataMapper.dynaTab" /> -->
              	<where>
		        	<trim prefix=" (" suffix=")" prefixOverrides="AND">
	            		<include refid="dataMapper.baseWhereStationClauses" />
	            		<include refid="dataMapper.baseWhereStationClauses" />
 						<include refid="dataMapper.baseWhereResultClauses" />
<!-- 						<include refid="dataMapper.dynaWhere" /> -->
					</trim>
                	and s.site_id = a.site_id
                	and s.data_source_id = a.data_source_id
                </where>
          	</if>
		</if>
    </sql>


    <sql id="resultsCountBase">
        <include refid="dataMapper.stationsCountBase"/>
    </sql>

    <!-- **********************************************************************************************************************
         *** result maps
         ********************************************************************************************************************** -->
 
    <resultMap id="station" type="LinkedHashMap">
        <id property="id" column="station_id"/>
        <!--  result property="details" column="station_clob" / -->
    </resultMap>


    <resultMap id="simplestation" type="LinkedHashMap">
        <id property="id" column="station_id"/>
        <result property="primarySiteType" column="site_type"/>
        <result property="latitude" column="latitude"/>
        <result property="longitude" column="longitude"/>
    </resultMap>

    <!-- **********************************************************************************************************************
         *** column oriented
         ********************************************************************************************************************** -->

    <sql id="activityId">
        activity in <foreach item="i" collection="activityId" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="analyticalmethod">
        analytical_method in <foreach item="i" collection="analyticalmethod" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="dataSource">
        data_source_id in (select data_source_id
                             from <include refid="dataMapper.dbSchema"/>data_source
                            where data_source in <foreach item="i" collection="dataSource" open="(" separator="," close=")">#{i}</foreach>)
    </sql>

    <sql id="bBox">
        sdo_inside(geom, sdo_geometry(2003, 8265, null, sdo_elem_info_array(1, 1003, 3), sdo_ordinate_array(#{bBox[0]},#{bBox[1]}, #{bBox[2]}, #{bBox[3]}))) = 'TRUE'
    </sql>

    <sql id="within">
        sdo_within_distance(geom, sdo_geometry(2001, 8265, sdo_point_type(#{long[0]}, #{lat[0]}, null), null, null), 'DISTANCE='||#{within[0]}||' UNIT=MILE') = 'TRUE'
    </sql>

    <sql id="countrycode">
        country_code in 
        <foreach item="i" collection="countrycode" open="(" separator="," close=")">#{i}</foreach> and 1 = 1
    </sql>

    <sql id="statecode">
        (state_code) in <foreach item="i" collection="statecode" open="(" separator="," close=")">(NVL(#{i[0],jdbcType=CHAR},'US')||':'||#{i[1]})</foreach> and 1 = 1
    </sql>

    <sql id="countycode">
        (county_code) in <foreach item="i" collection="countycode" open="(" separator="," close=")">(NVL(#{i[0],jdbcType=CHAR},'US')||':'||#{i[1]}||':'||#{i[2]})</foreach> and 1 = 1
    </sql>

    <sql id="huc">
        <foreach item="i" collection="huc" separator=" or ">
            huc_12 like #{i}</foreach>
    </sql>

    <sql id="siteType">
        site_type in <foreach item="i" collection="siteType" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="organization">
        organization in <foreach item="i" collection="organization" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="pCode">
        p_code in <foreach item="i" collection="pCode" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="sampleMedia">
        sample_media in <foreach item="i" collection="sampleMedia" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="characteristicName">
        characteristic_name in <foreach item="i" collection="characteristicName" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="characteristicType">
        characteristic_type in <foreach item="i" collection="characteristicType" open="(" separator="," close=")">#{i}</foreach>
    </sql>

    <sql id="startDateLoHi">
        event_date
        <choose>
            <when test="startDateLo != null &amp;&amp; startDateHi != null">
        &gt;= to_date(#{startDateLo[0]}, 'MM-DD-YYYY') and event_date &lt; to_date(#{startDateHi[0]},'MM-DD-YYYY')+1
            </when>
            <when test="startDateLo != null">
        &gt;= to_date(#{startDateLo[0]}, 'MM-DD-YYYY')
            </when>
            <otherwise>
        &lt; to_date(#{startDateHi[0]}, 'MM-DD-YYYY')+1
            </otherwise>
        </choose>
    </sql>

<!--     <sql id="dynaTab"> -->
<!--         <if test="siteid != null"> -->
<!--             ,(select /*+ cardinality(dyn 1) */ column_value -->
<!--                 from table(pkg_dynamic_list.get_table(#{siteid,typeHandler=ArrayParameterTypeHandler})) dyn) dynamic_siteid -->
<!--         </if> -->
<!--     </sql> -->

<!--     <sql id="dynaWhere"> -->
<!--         <if test="siteid != null"> -->
<!--             and (site_id = dynamic_siteid.column_value) -->
<!--         </if> -->
<!--     </sql> -->

    <!-- **********************************************************************************************************************
         *** Result
         ********************************************************************************************************************** -->

    <sql id="baseWhereResultClauses">
        <if test="activityId != null">
            and (<include refid="dataMapper.activityId" />)
        </if>
        <if test="analyticalmethod != null">
            and (<include refid="dataMapper.analyticalmethod" />)
        </if>
        <if test="characteristicName != null">
            and (<include refid="dataMapper.characteristicName" />)
        </if>
        <if test="characteristicType != null">
            and (<include refid="dataMapper.characteristicType" />)
        </if>
        <if test="pCode != null">
            and (<include refid="dataMapper.pCode" />)
        </if>
        <if test="sampleMedia != null">
            and (<include refid="dataMapper.sampleMedia" />)
        </if>
        <if test="startDateLo != null || startDateHi != null">
            and (<include refid="dataMapper.startDateLoHi" />)
        </if>
    </sql>

    <select id="resultsWQXCount" parameterType="map" resultType="String">
        select listagg(data_source || '- station: ' || station_count || '- pc-result: ' || pc_result_count, ';') within group (order by data_source)
          from (select data_source,
                       count(distinct s.site_id) station_count,
                       sum(pc_result_count) pc_result_count
            <include refid="dataMapper.resultsCountBase" />
                     group by data_source) 
    </select>


    <!-- **********************************************************************************************************************
         *** Station
         ********************************************************************************************************************** -->
    <sql id="baseWhereStationGeoClauses">
        <if test="bBox != null &amp;&amp; bBox.length == 4">
            and (<include refid="dataMapper.bBox" />)
        </if>
        <if test="within != null &amp;&amp; lat != null &amp;&amp; long != null">
            and (<include refid="dataMapper.within" />)
        </if>
    </sql>
    
    <sql id="baseWhereStationClauses">
        <if test="dataSource != null">
            and (<include refid="dataMapper.dataSource" />)
        </if>
        <if test="statecode != null &amp;&amp; countycode == null">
            and (<include refid="dataMapper.statecode" />)
        </if>
        <if test="countrycode != null">
            and (<include refid="dataMapper.countrycode" />)
        </if>
        <if test="countycode != null &amp;&amp; statecode == null &amp;&amp; countrycode == null">
            and (<include refid="dataMapper.countycode" />)
        </if>
        <if test="huc != null">
            and (<include refid="dataMapper.huc" />)
        </if>
        <if test="siteType != null">
            and (<include refid="dataMapper.siteType" />)
        </if>
        <if test ="organization != null">
            and (<include refid="dataMapper.organization" />)
        </if>
        
        <if test="siteid != null">
        	and (site_id in <foreach item="i" collection="siteid" open="(" separator="," close=")">#{i}</foreach>)
        </if>
        
    </sql>

    <select id="stationsWQXCount" parameterType="map" resultType="String">
        select listagg(data_source || ': ' || station_count, ';') within group (order by data_source)
          from (select data_source,
                       count(distinct s.site_id) station_count
        <include refid="dataMapper.stationsCountBase"/>
                     group by data_source) 
    </select>

    <select id="stationsWQXSelect" resultMap="dataMapper.station" resultOrdered="true">
        select data_source_id, code_value, description
        <include refid="dataMapper.stationsBase"/>
            order by organization
    </select>

    <select id="stationsKMLSelect" resultType="String">
        select xmlserialize(content XMLtransform(station_details, #{stylesheet}) as clob no indent) test
        <include refid="dataMapper.stationsBase"/>
            order by organization
    </select>

    <select id="selectStationsCount" resultType="java.util.LinkedHashMap">
        select DATA_SOURCE, count(*) ENTRIES
          <include refid="dataMapper.stationsBase"/>
          group by rollup(DATA_SOURCE)
    </select>


    <select id="selectStationsMapList" resultType="java.util.LinkedHashMap"  resultOrdered="true">
        select distinct 
			ORGANIZATION,
			ORGANIZATION_NAME,
			SITE_ID,
			STATION_NAME,
			STATION_TYPE_NAME,
			DESCRIPTION_TEXT,
			HUC_8 ,
			DRAIN_AREA_VALUE,
			DRAIN_AREA_UNIT,
			CONTRIB_DRAIN_AREA_VALUE,
			CONTRIB_DRAIN_AREA_UNIT,
			LATITUDE,
			LONGITUDE,
			MAP_SCALE,
			GEOPOSITION_ACCY_VALUE,
			GEOPOSITION_ACCY_UNIT,
			GEOPOSITIONING_METHOD,
			HDATUM_ID_CODE,
			ELEVATION_VALUE,
			ELEVATION_UNIT,
			VERTICAL_ACCURACY_VALUE,
			VERTICAL_ACCURACY_UNIT,
			ELEVATION_METHOD,
			VDATUM_ID_CODE,
			COUNTRY_CODE,
			STATE_CODE,
			COUNTY_CODE,
			NAT_AQFR_NAME,
			AQFR_NAME,
			AQFR_TYPE_NAME,
			CONSTRUCTION_DATE,
			WELL_DEPTH_VALUE,
			WELL_DEPTH_UNIT,
			HOLE_DEPTH_VALUE,
			HOLE_DEPTH_UNIT,
			DATA_SOURCE			
        <include refid="dataMapper.stationsBase"/>
            order by organization,
                     site_id
    </select>
    
    <!-- **********************************************************************************************************************
         *** BiologicalResult/Station
         ********************************************************************************************************************** -->

    <sql id="biologicalResultsBase">
          from <include refid="dataMapper.dbSchema"/>biological_result
<!--         <include refid="dataMapper.dynaTab" /> -->
        <where>
            <include refid="dataMapper.baseWhereStationClauses" />
            <include refid="dataMapper.baseWhereResultClauses" />
<!--             <include refid="dataMapper.dynaWhere" /> -->
        </where>
    </sql>

    <select id="biologicalResultsWQXCount" parameterType="map" resultType="Integer">
        select count(*) resultsCount
            <include refid="dataMapper.biologicalResultsBase" />
    </select>

    <select id="biologicalstationsWQXCount" parameterType="map" resultType="Integer">
        select count(distinct station_pk) resultsCount
            <include refid="dataMapper.biologicalResultsBase" />
    </select>
</mapper>

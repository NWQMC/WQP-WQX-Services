<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 

<mapper namespace="summaryStation">
	
    <sql id="selectSummaryAllMonths">
        TO_CHAR(summary_all_months) summary_all_months,
        nvl(filter.activity_count,0) activity_count,
        nvl(filter.result_count,0) result_count
    </sql>
    
    <sql id="selectSummary12Months">
        TO_CHAR(summary_past_12_months) summary_past_12_months,
        nvl(filter.activity_count_past_12_months,0) activity_count,
        nvl(filter.result_count_past_12_months,0) result_count
    </sql>
    
    <sql id="selectSummary60Months">
        TO_CHAR(summary_past_60_months) summary_past_60_months,
        nvl(filter.activity_count_past_60_months,0) activity_count,
        nvl(filter.result_count_past_60_months,0) result_count
    </sql>
    
    <sql id="selectSummaryByYear">
        <choose>
            <when test="summaryYears == null or summaryYears.equalsIgnoreCase('all')"><include refid="selectSummaryAllYears" /></when>
            <otherwise>
                <choose>
                    <when test="summaryYears.equalsIgnoreCase('1')"><include refid="selectSummary12Months" /></when>
                    <when test="summaryYears.equalsIgnoreCase('5')"><include refid="selectSummary60Months" /></when>
                    <otherwise><include refid="selectSummaryAllYears" /></otherwise>
                </choose>
            </otherwise>
        </choose>
    </sql>
	
    <sql id="summaryYearWhere">
        <where>
            <include refid="dynamicWhere.baseWhereStationGeoClauses" />
            <include refid="dynamicWhere.baseWhereStationClauses" />
            <choose>
                <when test="summaryYears == null or summaryYears.equalsIgnoreCase('all')">
                    and summary_all_months is not null
                </when>
                <otherwise>
                    <choose>
                        <when test="summaryYears.equalsIgnoreCase('1')">and summary_past_12_months is not null</when>
                        <when test="summaryYears.equalsIgnoreCase('5')">and summary_past_60_months is not null</when>
                        <otherwise>and summary_all_months is not null</otherwise>
                    </choose>
                </otherwise>
            </choose>
        </where>
    </sql>

    <select id="select" resultType="java.util.LinkedHashMap" fetchSize="500">

        SELECT
        prime.data_source,
        prime.organization,
        prime.organization_name,
        prime.site_id,
        prime.station_name,
        prime.site_type,
        TO_CHAR(prime.geom.sdo_point.y,'FM90.0000000') latitude,
        TO_CHAR(prime.geom.sdo_point.x,'FM990.0000000') longitude,
        prime.station_type_name,
        prime.huc_8,
        state.description_with_out_country state_name,
        county.description_wo_country_state county_name,
        <include refid="selectSummaryByYear" />
			    
        FROM station prime
	    
        join (
            select 
                data_source_id, 
                station_id, 
                activity_count, 
                result_count, 
                summary_past_12_months, 
                summary_past_60_months, 
                summary_all_months
            from station_sum
            ) filter
        on prime.station_id = filter.station_id and
        prime.data_source_id = filter.data_source_id

        LEFT JOIN state ON prime.data_source_id = state.data_source_id
        AND prime.state_code = state.code_value
        
        LEFT JOIN county ON prime.data_source_id = county.data_source_id
        AND prime.county_code = county.code_value
        <include refid="summaryYearWhere" />
            
        ORDER BY
        prime.data_source_id,
        prime.organization,
        prime.site_id
    </select>

    <select id="count" resultType="java.util.LinkedHashMap">
        select data_source,
               count(distinct data_source||'-'||station_id) station_count
        from (select prime.data_source,
                     prime.station_id
              from station_sum prime
              <include refid="summaryYearWhere" />
             ) prime
        group by rollup(data_source)   
    </select>

</mapper>
